<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/08/20/kuai-su-ru-men-git/"/>
      <url>/2021/08/20/kuai-su-ru-men-git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git快速入门"><a href="#Git快速入门" class="headerlink" title="Git快速入门"></a>Git快速入门</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><ol><li><p>点击右上角 + 号，选择下拉菜单选择 <strong>New repository（新建仓库）</strong>。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210806224614081.png" alt="image-20210806224614081"></p></li><li><p>为仓库设置自己心怡的名称。例如 “hello-world”。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210806224754132.png" alt="image-20210806224754132"></p></li><li><p>（可选）添加仓库的说明。例如，“我在 GitHub 上的第一个仓库”。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210806225007260.png" alt="image-20210806225007260"></p></li><li><p>选择仓库可见性。（公共或私有）</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210806225046524.png" alt="image-20210806225046524"></p></li><li><p>选择 Initialize this repository with a README（使用自述文件初始化此仓库）。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210806225227004.png" alt="image-20210806225227004"></p></li><li><p>最后点击 Create repository。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210806225316669.png" alt="image-20210806225316669"></p><p>这样一个 Github 仓库就建立好了。</p></li></ol><h2 id="复刻仓库"><a href="#复刻仓库" class="headerlink" title="复刻仓库"></a>复刻仓库</h2><p>复刻是仓库的副本。通过复刻仓库，可以自由地尝试更改而不会影响原始项目。</p><ol><li><p><strong>创建复刻的本地克隆</strong></p><ol><li><p>找到你想要复刻的仓库，点击 Code。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210808155638074.png" alt="image-20210808155638074"></p></li><li><p>然后任意选择 HTTPS 或者 SSH 方式，点击复制按钮，复制地址。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210808155856882.png" alt="image-20210808155856882"></p></li><li><p>在你想要存放的文件夹下，右击鼠标打开 Git Bash。</p></li><li><p>键入  git clone ,然后粘贴刚刚复制的 URL。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210808160952914.png" alt="image-20210808160952914"></p></li><li><p>按 Enter 键。创建你的本地克隆。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210808160758187.png" alt="image-20210808160758187"></p></li></ol><p>这样一个本地克隆就复刻好了。</p></li><li><p><strong>配置 Git 以将你的复刻与原始仓库同步</strong></p><ol><li><p>同上 1-2 条</p></li><li><p>在刚刚本地克隆的目录右击打开 Git Bash。</p></li><li><p>键入 git remote -v,然后按 Enter 键。你将看到当前为复刻配置的远程仓库。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210808161948820.png" alt="image-20210808161948820"></p></li><li><p>键入 git remote add upstream ，然后粘贴刚刚复制的仓库 URL 并按 Enter 键。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210808162153393.png" alt="image-20210808162153393"></p></li><li><p>验证为复刻指定的上游仓库，再次键入 git remote -v 。</p><p>你将看到复刻的 URL 为 origin，原始仓库的 URL 为 upstream。</p><p><img src="/2021/08/20/kuai-su-ru-men-git/Users\HP\AppData\Roaming\Typora\typora-user-images\image-20210808162328344.png" alt="image-20210808162328344"></p></li></ol></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/19/hello-world/"/>
      <url>/2021/08/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
